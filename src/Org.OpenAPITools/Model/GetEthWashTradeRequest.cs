/*
 * Gallop API
 *
 * Data and insights APIs, webooks, and dashboards enabling businesses to launch tokenized products in seconds.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@higallop.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// GetEthWashTradeRequest
    /// </summary>
    [DataContract(Name = "getEthWashTrade_request")]
    public partial class GetEthWashTradeRequest : IEquatable<GetEthWashTradeRequest>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="GetEthWashTradeRequest" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected GetEthWashTradeRequest() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="GetEthWashTradeRequest" /> class.
        /// </summary>
        /// <param name="transactionHash">The transaction hash to valildate. (required).</param>
        public GetEthWashTradeRequest(string transactionHash = default(string))
        {
            // to ensure "transactionHash" is required (not null)
            if (transactionHash == null)
            {
                throw new ArgumentNullException("transactionHash is a required property for GetEthWashTradeRequest and cannot be null");
            }
            this.TransactionHash = transactionHash;
        }

        /// <summary>
        /// The transaction hash to valildate.
        /// </summary>
        /// <value>The transaction hash to valildate.</value>
        /// <example>&quot;0x8a67b9ec06d01ebd2f8363f4a19cb6b55e3fa409877f18d5716716cce457676d&quot;</example>
        [DataMember(Name = "transaction_hash", IsRequired = true, EmitDefaultValue = true)]
        public string TransactionHash { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class GetEthWashTradeRequest {\n");
            sb.Append("  TransactionHash: ").Append(TransactionHash).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as GetEthWashTradeRequest);
        }

        /// <summary>
        /// Returns true if GetEthWashTradeRequest instances are equal
        /// </summary>
        /// <param name="input">Instance of GetEthWashTradeRequest to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(GetEthWashTradeRequest input)
        {
            if (input == null)
            {
                return false;
            }
            return 
                (
                    this.TransactionHash == input.TransactionHash ||
                    (this.TransactionHash != null &&
                    this.TransactionHash.Equals(input.TransactionHash))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.TransactionHash != null)
                {
                    hashCode = (hashCode * 59) + this.TransactionHash.GetHashCode();
                }
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        public IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
